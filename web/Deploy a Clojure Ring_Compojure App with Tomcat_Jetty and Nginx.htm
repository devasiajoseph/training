<!DOCTYPE html>
<!-- saved from url=(0074)https://fitacular.com/blog/clojure/2014/07/14/deploy-clojure-tomcat-nginx/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Deploy a Clojure Ring/Compojure App with Tomcat/Jetty and Nginx</title>
    <meta name="viewport" content="width=device-width">
    <meta name="description" content="Development blog for Fitacular Heavy Industries. Focused on simplicity with Clojure, Ruby, and Swift.">
    <link rel="canonical" href="https://fitacular.com/blog/clojure/2014/07/14/deploy-clojure-tomcat-nginx/">

    <!-- Custom CSS -->
    <link rel="stylesheet" href="./Deploy a Clojure Ring_Compojure App with Tomcat_Jetty and Nginx_files/main.css">

</head>


    <body>

    <header class="site-header">

  <div class="wrap">

    <a class="site-title" href="https://fitacular.com/blog/">Fitacular Active Development</a>

    <nav class="site-nav">
      <a href="https://fitacular.com/blog/clojure/2014/07/14/deploy-clojure-tomcat-nginx/#" class="menu-icon">
        <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 18 15" enable-background="new 0 0 18 15" xml:space="preserve">
          <path fill="#505050" d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0
            h15.031C17.335,0,18,0.665,18,1.484L18,1.484z"></path>
          <path fill="#505050" d="M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0c0-0.82,0.665-1.484,1.484-1.484
            h15.031C17.335,6.031,18,6.696,18,7.516L18,7.516z"></path>
          <path fill="#505050" d="M18,13.516C18,14.335,17.335,15,16.516,15H1.484C0.665,15,0,14.335,0,13.516l0,0
            c0-0.82,0.665-1.484,1.484-1.484h15.031C17.335,12.031,18,12.696,18,13.516L18,13.516z"></path>
        </svg>
      </a>
      <div class="trigger">
        
          <a class="page-link" href="https://fitacular.com/blog/about/">About</a>
        
          <a class="page-link" href="https://fitacular.com/blog/feed.xml"></a>
        
          <a class="page-link" href="https://fitacular.com/blog/"></a>
        
      </div>
    </nav>

  </div>

</header>


    <div class="page-content">
      <div class="wrap">
      <div class="post">

  <header class="post-header">
    <h1>Deploy a Clojure Ring/Compojure App with Tomcat/Jetty and Nginx</h1>
    <p class="meta">Jul 14, 2014</p>
  </header>

  <article class="post-content">
  <p>Let’s say you have a <a href="https://github.com/ring-clojure/ring">Ring</a>- and <a href="https://github.com/weavejester/compojure">Compojure</a>-based Clojure web app that you
want to run in a production environment, e.g. an Ubuntu server. Running <a href="http://leiningen.org/"><code>lein run</code></a>
in the background will not work because the process terminates immediately. Running
it in a detached <code>screen</code> session as <a href="https://stackoverflow.com/questions/16063592/how-i-can-start-lein-ring-server-in-background">suggested on StackOverflow</a> will
work, but is not so clean–it won’t auto-restart, for instance.</p>

<p><a href="http://nginx.org/en/">Nginx</a> can serve your app directly with the <a href="https://github.com/nginx-clojure/nginx-clojure">nginx-clojure module</a>,
which I have not tried yet.</p>

<p>The project can also run on <a href="https://tomcat.apache.org/">Tomcat</a> or <a href="http://www.eclipse.org/jetty/">Jetty</a>, and optionally
use Nginx to handle traffic forwarding to the Tomcat/Jetty port.</p>

<p>The rest of this post details how to accomplish this. On a high level, the steps are:</p>

<ol>
  <li>Create a WAR file from the Clojure project with the <a href="https://github.com/weavejester/lein-ring">lein-ring plugin</a>
    <ul>
      <li>WAR is <a href="http://stackoverflow.com/questions/5871053/java-war-vs-jar-what-is-the-difference">not the same as a JAR</a>, so lein’s built-in <code>uberjar</code> won’t work here</li>
    </ul>
  </li>
  <li>Set up Tomcat or Jetty and deploy the WAR</li>
  <li>Send traffic to Tomcat/Jetty with Nginx</li>
</ol>

<p>Once you have a feel for how an app can be deployed, it should be easier to make changes based on
your own needs.</p>

<h4 id="create-the-war">Create the WAR</h4>

<p>Add the lein-ring plugin to the Clojure project. Here’s an example <code>project.clj</code>, with lines you
probably need to add (if you were running with <code>lein run</code> before) marked with <code>; add</code>.</p>

<div class="highlight"><pre><code class="clojure"><span class="p">(</span><span class="kd">defproject </span><span class="nv">sampleproject</span> <span class="s">"0.1.0-SNAPSHOT"</span>
  <span class="ss">:main</span> <span class="nv">sampleproject.core</span>
  <span class="ss">:dependencies</span> <span class="p">[[</span><span class="nv">org.clojure/clojure</span> <span class="s">"1.5.1"</span><span class="p">]</span>
                 <span class="p">[</span><span class="nv">compojure</span> <span class="s">"1.1.5"</span><span class="p">]]</span>
  <span class="ss">:plugins</span> <span class="p">[[</span><span class="nv">lein-ring</span> <span class="s">"0.8.11"</span><span class="p">]]</span>                  <span class="c1">; add</span>
  <span class="ss">:ring</span> <span class="p">{</span><span class="ss">:handler</span> <span class="nv">sampleproject.core/handler</span><span class="p">})</span>     <span class="c1">; add</span></code></pre></div>

<p>In this case, sampleproject.core/handler is the Compojure handler. For reference, core.clj
should have some lines like these:</p>

<div class="highlight"><pre><code class="clojure"><span class="p">(</span><span class="kd">ns </span><span class="nv">sampleproject.core</span>
  <span class="p">(</span><span class="ss">:use</span> <span class="nv">compojure.core</span><span class="p">))</span>

<span class="p">(</span><span class="nf">defroutes</span> <span class="nv">handler</span>
  <span class="p">(</span><span class="nf">GET</span> <span class="s">"/"</span> <span class="p">[]</span>
    <span class="s">"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;h1&gt;Fitacular&lt;/h1&gt;&lt;/html&gt;\n"</span><span class="p">))</span></code></pre></div>

<p>In the project root, run <code>lein ring uberwar</code> to create
<code>target/sampleproject-0.1.0-SNAPSHOT-standalone.war</code>.</p>

<h4 id="set-up-tomcat">Set up Tomcat</h4>

<p>This assumes you are on Ubuntu 14.04 LTS and may need some adjustments otherwise.</p>

<p>First, run <code>sudo apt-get install tomcat7</code> to get Tomcat. Tomcat listens on port 8080 by default.</p>

<p>Then, copy your WAR file from your Clojure project’s <code>target</code> directory to
<code>/var/lib/tomcat7/webapps/sampleproject.war</code>. To serve from root (<code>/</code>) instead of <code>/sampleproject</code>,
remove the <code>ROOT</code> directory and name your WAR file <code>ROOT.war</code> instead.</p>

<p>If you are planning to route through Nginx, you may also want to set up Tomcat to only listen
locally by adding <code>address="127.0.0.1"</code> to the (first) <code>&lt;Connector&gt;</code> tag in
<code>/etc/tomcat7/server.xml</code>:</p>

<div class="highlight"><pre><code class="xml"><span class="nt">&lt;Connector</span> <span class="na">port=</span><span class="s">"8080"</span> <span class="na">protocol=</span><span class="s">"HTTP/1.1"</span>
           <span class="na">address=</span><span class="s">"127.0.0.1"</span>
           <span class="na">connectionTimeout=</span><span class="s">"20000"</span>
           <span class="na">URIEncoding=</span><span class="s">"UTF-8"</span>
           <span class="na">redirectPort=</span><span class="s">"8443"</span> <span class="nt">/&gt;</span></code></pre></div>

<p>Finally, run <code>sudo service tomcat7 restart</code>. The app should be accessible at
<code>http://localhost:8080/sampleproject</code> (replace ‘sampleproject’ with whatever the name
of your WAR is, or with nothing if you went the root route).</p>

<h4 id="set-up-jetty">Set up Jetty</h4>

<p>This is an alternative to Tomcat, so you only need to do one or the other.</p>

<p>First, run <code>sudo apt-get install jetty</code> to get Jetty. Jetty also listens on port 8080 by default.</p>

<p>Then, copy your WAR file from your Clojure project’s <code>target</code> directory to
<code>/var/lib/jetty/webapps/sampleproject.war</code>. To serve from root (<code>/</code>) instead of <code>/sampleproject</code>,
remove the <code>root</code> directory and name your WAR file <code>ROOT.war</code> instead.</p>

<p>You also need to change <code>NO_START</code> to 0 in <code>/etc/default/jetty</code>.</p>

<p>Jetty will listen locally by default. To listen on a domain or change listening port,
edit <code>JETTY_HOST</code> or <code>JETTY_PORT</code>, also in <code>/etc/default/jetty</code>.</p>

<p>Finally, run <code>sudo service jetty restart</code>. The app should be accessible at
<code>http://localhost:8080/sampleproject</code> (replace ‘sampleproject’ with whatever the name
of your WAR is, or nothing if you used ROOT.war).</p>

<h4 id="configure-nginx">Configure Nginx</h4>

<p>If you want to serve your Clojure app alongside other content, especially if you
added the address/host restriction in the prior sections, you can get Nginx to forward
traffic to Tomcat/Jetty by adding a <code>location</code> block.</p>

<p>Add this to your <code>server</code> block in <code>/etc/nginx/sites-available/default</code> or similar:</p>

<div class="highlight"><pre><code class="nginx"><span class="k">location</span> <span class="s">/sampleproject/</span> <span class="p">{</span>
  <span class="kn">proxy_set_header</span> <span class="s">Host</span> <span class="s">localhost</span><span class="p">;</span>
  <span class="kn">proxy_pass</span> <span class="s">http://localhost:8080</span><span class="p">;</span>
<span class="p">}</span></code></pre></div>

<p>If you are serving the Clojure app from root, you may also need to add a <a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html">rewrite directive</a>.</p>

<p>Finally, run <code>sudo service nginx restart</code> to enable the change. The app should be accessible
at <code>http://[domain]/sampleproject</code>.</p>


  </article>

</div>
      </div>
    </div>

    <footer class="site-footer">

  <div class="wrap">

    <h2 class="footer-heading">Fitacular Active Development</h2>

    <div class="footer-col-1 column">
      <ul>
        <li>Fitacular Active Development</li>
        <li><a href="mailto:mail@fitacular.com">mail@fitacular.com</a></li>
      </ul>
    </div>

    <div class="footer-col-2 column">
      <ul>
        <li>
          <a href="https://github.com/fitacular">
            <span class="icon github">
              <svg version="1.1" class="github-icon-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
                <path fill-rule="evenodd" clip-rule="evenodd" fill="#C2C2C2" d="M7.999,0.431c-4.285,0-7.76,3.474-7.76,7.761
                c0,3.428,2.223,6.337,5.307,7.363c0.388,0.071,0.53-0.168,0.53-0.374c0-0.184-0.007-0.672-0.01-1.32
                c-2.159,0.469-2.614-1.04-2.614-1.04c-0.353-0.896-0.862-1.135-0.862-1.135c-0.705-0.481,0.053-0.472,0.053-0.472
                c0.779,0.055,1.189,0.8,1.189,0.8c0.692,1.186,1.816,0.843,2.258,0.645c0.071-0.502,0.271-0.843,0.493-1.037
                C4.86,11.425,3.049,10.76,3.049,7.786c0-0.847,0.302-1.54,0.799-2.082C3.768,5.507,3.501,4.718,3.924,3.65
                c0,0,0.652-0.209,2.134,0.796C6.677,4.273,7.34,4.187,8,4.184c0.659,0.003,1.323,0.089,1.943,0.261
                c1.482-1.004,2.132-0.796,2.132-0.796c0.423,1.068,0.157,1.857,0.077,2.054c0.497,0.542,0.798,1.235,0.798,2.082
                c0,2.981-1.814,3.637-3.543,3.829c0.279,0.24,0.527,0.713,0.527,1.437c0,1.037-0.01,1.874-0.01,2.129
                c0,0.208,0.14,0.449,0.534,0.373c3.081-1.028,5.302-3.935,5.302-7.362C15.76,3.906,12.285,0.431,7.999,0.431z"></path>
              </svg>
            </span>
            <span class="username">fitacular</span>
          </a>
        </li>
        <li>
          <a href="https://twitter.com/fitacular">
            <span class="icon twitter">
              <svg version="1.1" class="twitter-icon-svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 16 16" enable-background="new 0 0 16 16" xml:space="preserve">
                <path fill="#C2C2C2" d="M15.969,3.058c-0.586,0.26-1.217,0.436-1.878,0.515c0.675-0.405,1.194-1.045,1.438-1.809
                c-0.632,0.375-1.332,0.647-2.076,0.793c-0.596-0.636-1.446-1.033-2.387-1.033c-1.806,0-3.27,1.464-3.27,3.27
                c0,0.256,0.029,0.506,0.085,0.745C5.163,5.404,2.753,4.102,1.14,2.124C0.859,2.607,0.698,3.168,0.698,3.767
                c0,1.134,0.577,2.135,1.455,2.722C1.616,6.472,1.112,6.325,0.671,6.08c0,0.014,0,0.027,0,0.041c0,1.584,1.127,2.906,2.623,3.206
                C3.02,9.402,2.731,9.442,2.433,9.442c-0.211,0-0.416-0.021-0.615-0.059c0.416,1.299,1.624,2.245,3.055,2.271
                c-1.119,0.877-2.529,1.4-4.061,1.4c-0.264,0-0.524-0.015-0.78-0.046c1.447,0.928,3.166,1.469,5.013,1.469
                c6.015,0,9.304-4.983,9.304-9.304c0-0.142-0.003-0.283-0.009-0.423C14.976,4.29,15.531,3.714,15.969,3.058z"></path>
              </svg>
            </span>
            <span class="username">fitacular</span>
          </a>
        </li>
      </ul>
    </div>

    <div class="footer-col-3 column">
      <p class="text">Development blog for Fitacular Heavy Industries. Focused on simplicity with Clojure, Ruby, and Swift.</p>
    </div>

  </div>

</footer>


    
</body></html>