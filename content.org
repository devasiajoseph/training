#+STYLE: <link rel="stylesheet" type="text/css" href="bootstrap/css/bootstrap.min.css" />

#+TITLE: Clojure Training

* Intro to Functional Programming with Clojure

** What is functional programming

   Functions are first class objects
   - It can be created on demand.
   - It can be stored in a data structure.
   - It can be passed as an argument to a function.
   - It can be returned as the value of a function.

** Higher order functions

** Anonymous Functions

** Functional composition

** Pure functions and immutablilty

** Map Reduce Filter


* Intoduction to Clojure

** What is Clojure

** Advantages of Clojure

** Disadvantages of Clojure

** Installing Clojure

** Tooling

* Basic Clojure Syntax and REPL

** Lisp syntax

** The REPL

** Leiningen

** Code execution and Project Structure

* Clojure Namespaces

** What is a namespace?
** The 'user' namespace
** Using code in other namespaces
** require, use, and import
** Reloading namespaces
** The namespace declaration

* Working with Java Code & Clojure

** Importing Java packages
** Using static class members
** Creating objects
** Calling instance methods
   
* More Clojure Syntax

** Execution (do, doseq, dotimes)
** Conditionals (if, cond, condp, case)
** Iteration (while, for, loop)
** Recursion
** Tail recursion
** Exception handling
** Destructuring
** Using :keys and :or Named arguments

* Macros

** Exploring Macros
** Creating our Own Macros
** Using Templating to Create Macros

* Data Structures
** The four basic structures:
** lists
** vectors
** maps
** sets
** Sequences
** Lazy Sequences
** Operations on sequences (eg map, reduce, filter)
** Design Considerations for Clojure programming

Polymorphism
Protocols
Defining and using Types
Defining and using Records
Handling Java with interop

Intro to Concurency


Intro to Web Programming with Clojure
Ring
Compojure
Other foundational libraries


Day 5
Web Programming with Clojure (contd)
Restful Services with Clojure
HTML Templating library
REST API library
State Management in projects
Clojurescript introduction (optional)
Deployment


